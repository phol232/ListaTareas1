from src.Capa_Conexion.ConexionMySql import ConexionMySql
from src.Capa_Datos.UsuariosDAO import UsuariosDAO  # Aseg√∫rate de importar UsuariosDAO

class NegUsuarios:
    conexion_sesion = None  # Guardar√° la conexi√≥n de sesi√≥n
    usuario_actual = None   # Guardar√° la informaci√≥n del usuario logueado

    @staticmethod
    def autenticar_usuario(email, password):
        conexion = ConexionMySql.get_conexion_sesion()
        try:
            cursor = conexion.cursor(dictionary=True)
            cursor.execute("CALL validate_user_login(%s, %s)", (email, password))
            resultado = cursor.fetchone()

            print(f"üì¢ Resultado del login: {resultado}")

            if resultado and resultado.get('message') == "Login successful":
               NegUsuarios.usuario_actual = {
                  "user_id": resultado.get('id'),  # Aseg√∫rate de que exista 'id'
                  "name": resultado.get('name'),
                  "email": resultado.get('email')  # ‚úÖ A√±ade 'email' si falta
               }
               return {"message": "Login successful", "user": NegUsuarios.usuario_actual}
            else:
                return {"message": "Invalid email or password"}
        except Exception as e:
            print(f"‚ùå Error al autenticar usuario: {e}")
            return {"message": f"Error: {str(e)}"}
        finally:
            cursor.close()


    @staticmethod
    def cerrar_sesion():
        """
        Cierra la sesi√≥n del usuario actual y limpia la variable de sesi√≥n en la base de datos.
        """
        if NegUsuarios.conexion_sesion and NegUsuarios.usuario_actual:
            try:
                cursor = NegUsuarios.conexion_sesion.cursor()
                cursor.execute("SET @current_user_id = NULL")  # Limpiar la variable de sesi√≥n en la BD
                NegUsuarios.usuario_actual = None  # Limpiar la informaci√≥n del usuario en memoria
                print("üö™ Sesi√≥n cerrada correctamente.")
            except Exception as e:
                print(f"‚ùå Error al cerrar sesi√≥n: {e}")
            finally:
                cursor.close()  # Cerrar el cursor
        else:
            print("‚ÑπÔ∏è No hay una sesi√≥n activa para cerrar.")
